{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACJI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAXEQ,SAASC,cAAc,QAc/BC,iBAAiB,UAAWC,IAC/BA,EAAGC,iBAEH,MAAMC,EAASL,SAASC,cAAc,+BAChCK,EAAQN,SAASC,cAAc,8BAC/BM,EAAUP,SAASC,cAAc,gCAEjCO,EAAQC,SAASJ,EAAOK,OACxBC,EAAOF,SAASH,EAAMI,OACtBE,EAASH,SAASF,EAAQG,OAGhC,IAAI,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAE/BvB,EAAcuB,EAAIL,GAASK,EAAI,GAAKF,GACnCG,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEzE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAEvEW,EAAGiB,cAAcC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) =>{\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  }, delay)});}\n    \n\nform.addEventListener('submit', (ev) => { \n  ev.preventDefault();\n  \n  const delayI = document.querySelector('.form input[name = \"delay\"]');\n  const stepI = document.querySelector('.form input[name = \"step\"]');\n  const amountI = document.querySelector('.form input[name = \"amount\"]') ;\n\n  const delay = parseInt(delayI.value);\n  const step = parseInt(stepI.value);\n  const amount = parseInt(amountI.value);\n  \n  \n  for(let i = 1; i <= amount; i += 1)\n  \n  { createPromise(i,  delay + (i - 1) * step )\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);;\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });}\n    ev.currentTarget.reset();}\n    \n  )\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","ev","preventDefault","delayI","stepI","amountI","delay1","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.bac5ca8e.js.map"}